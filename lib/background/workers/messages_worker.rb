# encoding: utf-8

require 'helpers/faye'

# Public: A worker that processes chat messages
# and broadcast them to a given destination.
class MessagesWorker
  
  include Worker::Base # Scripts, Daemons & Redis
  include Worker::REnv # Rails Environment
  include Worker::Queue # Queue Connector
  
  include Worker::Helper::Faye # Faye Broadcaster
  
  queue :messages # The AMQP queue from which messages should be pop'ed when available
  
  # Public: The action performed as soon as there's a new message in the queue
  # 
  # message - The Hashr options should contain (default: Hashr.new):
  #           :topic_id - The BSON id of the type of chat the message is being sent to (cloud of friendship)
  #           :topic_type - The type of chat the message is being sent to (cloud or friendship)
  #           :author_id - The BSON id of the user requesting to send the message
  #           :content - The content text of the message
  #           :timestamp - The time the message was sent
  #           :user_name - The display name of the user requesting to send the message
  #           :user_path - The profile path of the user requesting to send the message
  #           :user_avatar - The avatar url of the user requesting to send the message
  #           :client_id - The ID generated by the client requesting to send the message
  # 
  # Requests faye to broadcast the message to the given channel.
  def perform(message=Hashr.new)
        
    broadcast "/#{message.topic_type}/#{message.topic_id}/chat", {
      topic_id: message.topic_id,
      topic_type: message.topic_type,
      author_id: message.author_id,
      content: message.content,
      timestamp: message.utc_timestamp,
      user_name: message.user_name,
      user_path: message.user_path,
      user_avatar: message.user_avatar,
      client_id: message.client_id
    }
    
  end

end