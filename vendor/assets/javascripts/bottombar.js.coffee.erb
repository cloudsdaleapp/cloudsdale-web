window.ChatRoom = class ChatRoom
  
  constructor: (args) ->
    
    @room_name = args.room_name
    @room_id = args.room_id
    @room_topic = args.room_topic
    @parent_frame = args.parent_frame
    @parent = args.parent
    
    @frame = $(".chat-room-container[data-room-id=#{@room_id}]")
    @handler = $(".chat-room-trigger[data-room-id=#{@room_id}]")
    
    @client = args.client
    @seeded = false
    @active = false
    @title_notifications = 0
    
    @config()
    @render()
    
  config: =>
    @conf_MaxMessages = 50
    
  render: =>
    # Renders the base of the chat room frame to the view.
    # The parent frame should be the "ul.chat-container" element.
    #$.get "/chat/rooms/#{@room_id}/form", (data) =>
    #  @parent_frame.append(data)
    #.success =>
    @setup()
    @bind()
    @finalize()
      
  setup: =>
    # Sets up hooks to all the elements associated with chat room.
    @trigger = @handler.find("a")
    @notification_plate = @handler.find("span.chat-room-notification")
    @toolbar = @frame.find(".chat-room-toolbar")
    @close_trigger = @toolbar.find("header a.closex")
    @container = @frame
    @wrapper = @frame.find(".chat-room-messages")
    @form = @frame.find("form")
    @input = @form.find("textarea")

  bind: =>
    # Binds certain chat room frame interaction events
    @trigger.bind "click", =>
      $.event.trigger 'toggle.chatroom', @
      false
    
    @close_trigger.bind "click", =>
      $.event.trigger 'toggle.chatroom', @
      false
    
    @trigger.bind "toggle.chatroom", (e,obj) =>
      if obj == @
        @toggle()
      else
        if @active
          @hide()
    
    @input.BetterGrow
      initial_height: 12
      do_not_enter: null

    .keydown (e) =>
      @resizeElements()
      if e.which == 13 and e.shiftKey == false
        @form.submit()
        false

    @form.bind 'ajax:beforeSend', () =>
      @resetInput()

    .submit () =>
      @validateInput()
    
    # Set up subscription to room's message broadcast channel
    @client.subscribe "/chat/room/#{@room_id}", (data) =>
      @addNotification()
      if @seeded
        @appendMessage(data.timestamp,data.content,data.user_name,data.user_path,data.user_avatar)
    
    $(window).bind 'focus', =>
      if @active
        @clearNotifications()
  
  finalize: =>
    # Prepare the frames for interaction.
    @setNotifications()
    if $.cookie "chatroom:active:#{@room_id}"
      @show()
    else
      @hide()
  
  toggle: ->
    if @active
      @hide()
    else
      @show()
      
  show: ->
    # Takes the chat frame to maximized mode.
    $.cookie "chatroom:active:#{@room_id}", true,
      expires: 365
      path: "/"
      
    @active = true
    @frame.addClass('active')
    @handler.addClass('active')
    @seed()
    @correctContainerScroll(true)
    @clearNotifications()
    
  hide: ->
    # Takes the chat frame into minimized mode.
    $.cookie "chatroom:active:#{@room_id}", null,
      expires: 365
      path: "/"
      
    @active = false
    @frame.removeClass('active')
    @handler.removeClass('active')
    
  seed: ->
    # Appends last 30 messages from designated chat room into the container.
    unless @seeded
      $.getJSON "/chat/rooms/#{@room_id}/messages", (data) =>
        i = data.length - 1
        $.each data, (key, val) =>
          @appendMessage(val.timestamp,val.content,val.user_name,val.user_path,val.user_avatar)
          @correctContainerScroll(true)
          if key == i
            window.setTimeout ( =>
              @correctContainerScroll(true)
            ), 500
            
        @seeded = true
  
  appendMessage: (timestamp,content,user_name,user_path,user_avatar) ->
    # Appends a message to the bottom of the message container.
    t = new Date(timestamp)
    image = if user_avatar then "src='#{user_avatar}'" else "src='#{@parent.default_avatar_src}'"
    @wrapper.append(
      "<div data-timestamp='#{timestamp} 'class='chat-message'>
        <a href='#{user_path}'><img #{image}/></a>
        <header class='chat-message-head'>
          <span class='sender'><a href='#{user_path}'>#{user_name}</a></span>
          <span class='metadata'>#{t.toString('HH:mm:ss')}</span>
        </header>
        <p class='chat-message-content'>#{content}</p>
      </div>")
    
    @popLastMessages()
    @correctContainerScroll(true)
    
  popLastMessages: ->
    if @wrapper.children('div.chat-message').size() > @conf_MaxMessages
      @wrapper.find('div.chat-message:first').remove()
    
  isReadingHistory: ->
    # Should return true if scroll frame is not at maximum scroll down.
    (@container[0].scrollHeight - @container.scrollTop() == @container.outerHeight())

  correctContainerScroll: (readyForCorrection) ->
    # Scrolls chat container down to the bottom if readForCorrection is true.
    if readyForCorrection
      @wrapper.scrollTop(@wrapper[0].scrollHeight)
  
  resizeElements: ->
    window.setTimeout ( =>
      resizeHeight = @input.outerHeight()
      @wrapper.css
        bottom: resizeHeight
      @correctContainerScroll(true)
    ), 110
  
  validateInput: ->
    # Validates the input client side to ease load on chat servers.
    if (@input.attr('value').match(/^\s*$/) == null) and (@input.val.length > 0)
      true
    else
      false

  resetInput: ->
    # Resets the chat input completly.
    @input.val('')
  
  refreshGraphics: ->
    if @notifications > 0
      @notification_plate.html("#{@notifications}")
      @notification_plate.show()
    else
      @notification_plate.html("")
      @notification_plate.hide()

  clearNotifications: ->
    @parent.subtractGlobalNotification(@notifications)
    $.cookie "chatroom:notifications:#{@room_id}", 0, 
      expires: 365
      path: "/"
    @notifications = 0
    @refreshGraphics()
    
  addNotification: ->
    @notifications += 1
    unless @active
      $.cookie "chatroom:notifications:#{@room_id}", @notifications, 
        expires: 365
        path: "/"
        @refreshGraphics()
        
    @parent.addGlobalNotification()
    
      
  setNotifications: ->
    n = $.cookie "chatroom:notifications:#{@room_id}"
    unless n == null or n == NaN
      @notifications = parseInt($.cookie("chatroom:notifications:#{@room_id}"))
    else
      @notifications = 0
      $.cookie "chatroom:notifications:#{@room_id}", @notifications, 
        expires: 365
        path: "/"
        
    @refreshGraphics()


window.ChatNav = class ChatNav
  
  constructor: (args) ->
    @n = 0
    @container = $(".chat-room-list")
    @client = new Faye.Client("<%=Cloudsdale.config['url']%>:9191/faye")
    @getRooms()
    
    @default_avatar_src = $("#img_unknown_pony_chat").attr('src')
    
  getRooms: () ->
    $.each $(@container.children()), (key, val) =>
      data = $(val).data()
      new ChatRoom
        room_id: data.roomId
        room_name: data.roomName
        room_topic: data.roomTopic
        client: @client
        parent_frame: @container
        parent: @
  
  clearGlobalNotification: ->
    @n = 0
  
  addGlobalNotification: ->
    @n += 1
    @setGlobalNotification()
    
  subtractGlobalNotification: (num) ->
    @n -= num
    if @n < 0
      @clearGlobalNotification()
    @setGlobalNotification()
    
  setGlobalNotification: ->
    $.titleAlert "(#{@n}) message(s)",
      requireBlur: true
      stopOnFocus: true
      duration: 0
      interval: 1500

$ ->
  new ChatNav
