= form_for @article, :validate => true, :html => { :class => 'form-stacked', :multipart => true } do |f|
  .page-header
    %h1= "#{action_name}".capitalize + " Article"
    .row
      .span9
        %ul.tabs{ data: { tabs: :tabs } }
          %li{:class=>"#{params[:tab].nil? ? 'active' : ''}"}= link_to "Write", "#modify"
          %li= link_to "Preview", "#preview"
          %li= link_to "Help?", "#help"
      .span7
        - unless @article.new_record?
          = link_to "Remove", article_path(@article), :method => :delete, :class => 'btn error'
        = f.submit "Save", :disable_with => 'Saving...', :class => 'btn primary'
  .row.lower
    .span9
      .tab-content#my-tab-content
        .tab-pane#modify.active
          %fieldset
            .clearfix
              = f.label :content, "Content"
              .input
                = f.text_area :content
        .tab-pane#preview
          %article
          
        .tab-pane#help
          %article
          
    .span7
      %fieldset
        .clearfix
          = f.label :title, "Title"
          .input= f.text_field :title, :class => 'xlarge'
        .clearfix
          = f.label :premabel, "Premabel"
          .input
            = f.text_area :preambel
      %fieldset
        .clearfix
          = f.label :banner, "Banner"
          .input
            = f.file_field :banner
            .help-inline
              %strong= "Note:"
              = "Max size 480px * 200px, if it's any bigger, the picture will be resized automatically to fit the boundary."
            
      %fieldset
        .clearfix
          %label Options
          .input
            %ul.inputs-list
              %li
                %label
                  = f.check_box :published
                  %span= "Publish article after saving."
              %li
                %label
                  = f.check_box :hidden
                  %span= "Hide article in search results."
              %li
                %label
                  = f.check_box :commentable
                  %span= "Enable users commenting on this Article."

      %fieldset
        .clearfix
          = f.label :tag_tokens, "Tags"
          .input
            = f.text_area :tag_tokens, :class => 'span5', "data-pre" => @article.tags.map(&:token_inputs).to_json
            