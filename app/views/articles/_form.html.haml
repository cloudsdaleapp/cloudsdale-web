= form_for @article, :validate => true, :html => { :class => 'form-stacked', :multipart => true } do |f|
  .page-header
    %h1= "#{action_name}".capitalize + " Article"
    .row
      .span9
        %ul.nav.nav-tabs{ data: { tabs: :tabs } }
          %li{:class=>"#{params[:tab].nil? ? 'active' : ''}"}= link_to "Write", "#modify", data: { toggle: "tab" }
          %li= link_to "Preview", "#preview", data: { toggle: "tab" }
          %li= link_to "Help?", "#help", data: { toggle: "tab" }
      .span7
        - unless @article.new_record?
          = link_to "Remove", article_path(@article), :method => :delete, :class => 'btn error'
        = f.submit "Save", :disable_with => 'Saving...', :class => 'btn primary'
  .row.lower
    .span9
      .tab-content#my-tab-content
        .tab-pane#modify.active
          %fieldset
            .control-group
              = f.label :content, "Content"
              .controls
                = f.text_area :content
        .tab-pane#preview
          %article
            // Don't touch this - It's getting auto seeded through Javascript.
          
        .tab-pane#help
          %article
            %h2 Article formatting guide:
            %dl
            %h3 Text emphasis:
            %p For bold:  **bold text here** or __bold text here__
            %p For italics *italic text here*  or  _italic text here_
            %dl
            %h3 Links:
            %p For a link: [link text here](http://yourwebistehere.com/) 
            %dl
            %h3 Headers:
            %h1 For this header: #your text here
            %h2 For this header: ## your text here
            %h3 For this header: ### your text here
            %dl
            %h3 Lists: 
            %p  list with line spacing:
            %p * A list item
            %p * Another list item.
            %dl
            %p  list with no line spacing:
            %p 1) A list item
            %p 2) Another list item.
            %dl
            %h3 Block quotes: 
            %p > This is on the first level
            %p >> This is on the second level
            %p >>> ect..

          
    .span7
      %fieldset
        .control-group
          = f.label :title, "Title"
          .controls= f.text_field :title, :class => 'xlarge'
        .control-group
          = f.label :premabel, "Premabel"
          .controls
            = f.text_area :preambel
      %fieldset
        .control-group
          = f.label :banner, "Banner"
          .controls
            = f.file_field :banner
            .help-inline
              %strong= "Note:"
              = "Max size 480px * 200px, if it's any bigger, the picture will be resized automatically to fit the boundary."
            
      %fieldset
        .control-group
          %label Options
          .controls
            %ul.inputs-list
              %li
                %label
                  = f.check_box :published
                  %span= "Publish article after saving."
              %li
                %label
                  = f.check_box :hidden
                  %span= "Hide article in search results."
              %li
                %label
                  = f.check_box :commentable
                  %span= "Enable users commenting on this Article."

      %fieldset
        .control-group
          = f.label :tag_tokens, "Tags"
          .controls
            = f.text_area :tag_tokens, :class => 'span5', "data-pre" => @article.tags.map(&:token_inputs).to_json
            