# Let's backbone handle Cloudsdale API calls by default.
Backbone.Model.prototype.parse = (resp, xhr) -> if resp.result then resp.result else resp
Backbone.Collection.prototype.parse = (resp, xhr) -> if resp.result then resp.result else resp

window.railsRestSync = (method, model, options) ->
  if method == 'GET'
    options.url = model.url() + "/#{model.id}.json"
  else
    options.url = model.url()
  return Backbone.sync(method, model, options)

window.Cloudsdale =
  Models: {}
  Collections: {}
  Views: {}
  Routers: {}
  init: ->
    new Cloudsdale.Routers.Root()
    new Cloudsdale.Routers.Clouds()
    Backbone.history.start({pushState: true})
    window.app = Backbone.history

$(document).ready ->
  # Sets the session for the current user
  window.session = new Cloudsdale.Models.Session($('body').data().session)
  
  # Initializes the notification centre
  window.nfc = new NotificationCentre()
  $(document).bind "connected:nfc", ->
    
    # Changes an attribute to the document if focused
    # Initializes as true
    window.window_focus = true
    $(window).focus(-> document.window_focus = true).blur(-> document.window_focus = false)
  
    # Initializes the root view.
    view = new Cloudsdale.Views.Root()
    $('body').replaceWith(view.el)
    
    Cloudsdale.init()